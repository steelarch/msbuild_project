pipeline {
    agent any
    options {
      allowBrokenBuildClaiming()
    }
    environment {
      VERSION = "1.0.0"
    }
    triggers {
        githubPush()
    }
    stages {
        stage('Checkout repo'){
           steps{
               checkout scm
            }
         }
        stage('Restore'){
           steps{
            script {
               sh "sudo dotnet restore ConsoleApp/ConsoleApp.sln"
              }
            }
         }
        stage('Build'){
           steps{
            script {
              sh "sudo dotnet build /p:PackageVersion=${VERSION} ConsoleApp/ConsoleApp.sln --configuration Release --no-restore"
              }
            }
         }
        stage('Test: Unit Test'){
           steps {
                sh 'sudo dotnet test ConsoleApp/UnitTestProject/UnitTestProject.csproj --configuration Release --no-restore --logger "trx;LogFileName=./ConsoleApp/UnitTestProject/TestResults/UnitTests.trx"'
             }
          }
    }
    post {
        always {
           xunit (testDataPublishers: [[$class: 'ClaimTestDataPublisher']], thresholds: [ skipped(failureThreshold: '0'), failed(failureThreshold: '0')], tools: [[$class: 'JUnitType', pattern: 'ConsoleApp/UnitTestProject/TestResults/UnitTests.trx']])
         }

    }
}